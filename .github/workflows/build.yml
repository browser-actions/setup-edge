name: 'build-test'
on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [windows]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install --frozen-lockfile
      - run: yarn test
      - run: yarn build
      - run: yarn package

      # Test built action itself
      - uses: ./dist/
      - run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion
      - uses: ./dist/
        with:
          edge-version: beta
      - run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion
      - uses: ./dist/
        with:
          edge-version: dev
      - run: (Get-Item (Get-Command msedge).Source).VersionInfo.ProductVersion

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/checkout@v2
        with:
          ref: 'latest'
          path: 'dist'

      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn package
      - name: Setup git
        run: |
          git config --global user.name "Shin'ya Ueoka"
          git config --global user.email "ueokande@i-beam.org"

          cat >$HOME/.netrc <<EOF
          machine github.com
          login ueokande
          password ${GITHUB_TOKEN}
          EOF

      - name: Deploy to latest branch
        working-directory: ./dist
        run: |
          # Abort job successfully when no scripts updated
          test -z "$(git status --short)" && exit 0

          git add .
          git commit --message "Release for ${GITHUB_SHA}"
          git push origin latest

  test-latest:
    runs-on: windows-latest
    needs: [deploy]
    steps:
      - uses: browser-actions/setup-edge@latest
